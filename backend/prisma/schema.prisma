// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
//  binaryTargets = ["native", "darwin", "linux-arm64-openssl-1.1x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  intraId   String  @id
  nickName  String @unique
  avatar    String
  rank      Int
  currentRefreshTokenExp DateTime?
  currentRefreshToken String?
  friendsof    Friend[] @relation("friendOf")
  memeberof    Friend[] @relation("memberOf")
  channel      Channel[] @relation("channel")
  banRequest   MemberBan[] @relation("banRequest")
  banned       MemberBan[] @relation("banned")
  winner       GameHistory[] @relation("Player1")
  loser       GameHistory[] @relation("Player2")
}

model Friend  {
  friendIdx  Int @id @default(autoincrement())
  member      Member @relation("memberOf", fields: [memberId], references: [intraId])
  memberId   String
  friend      Member @relation("friendOf", fields: [friendId], references: [intraId])
  friendId   String
}

model Channel {
  chIdx       Int @id @default(autoincrement())
  chName      String @unique
  chPwd       String?
  chUserCnt   Int?
  operator    Member @relation("channel", fields: [operatorId], references: [intraId])
  operatorId  String
}

model MemberBan {
  memberBanIdx   Int @id @default(autoincrement())
  member         Member @relation("banRequest", fields: [memberId], references: [intraId])
  memberId       String
  banMember      Member @relation("banned", fields: [banId], references: [intraId])
  banId          String
}

model GameHistory{
  gameIdx       Int @id @default(autoincrement())
  winner        Member @relation("Player1", fields: [winnerId], references: [intraId])
  winnerId      String
  loser        Member @relation("Player2", fields: [loserId], references: [intraId])
  loserId      String
  winnerScore   Int
  loserScore   Int
}
